% script for Kalman Filtering 

close all
clear all
clc

% load the location file
load('ballSequence\\position.mat');

% Kalman Filter Matrices

% State Transition Model
A = [1 1 0 0; ...
     0 1 0 0; ...
     0 0 1 1; ...
     0 0 0 1];

% Measurement Model
H = [1 0 0 0; ...
     0 0 1 0];

% run the outer loop for the sequence
KFRunning = false;
Xk = [];
Xk1 = [];
Zk = [];
for i = 1:45
    curPosition = position(:, i);
    if(sum(curPosition) ~= 0 && ~KFRunning)
        % Initialise KF State Vector Xk
        Xk1 = [ curPosition(1); 2; curPosition(2); 2];
               
        % Start KF
        KFRunning = true;
        
        % Advance to next input
        i = i+1;
        curPosition = position(:, i);
    end
    
    % there could be two possible cases - 1- there is measurement / 2 -
    % there is no measurement
    % for 1 - we predict and correct - for - 2 we only predict and advance
    % State vector
    
    % 1 ---
    if(sum(curPosition) ~= 0 && KFRunning)
       % predict ...
       Xk = A*Xk1;
       Zk = H*Xk;
       
       % and correct
       Xk = Xk + (curPosition - 
    end
    
    % 2 ---
    if(sum(curPosition) == 0 && KFRunning)
        % Predict and advance State Vector
        
        
    end
    
    
    
    
    buffer = sprintf('ballSequence\\Color_%d.png', i);
    inImage = imread(buffer);
    
    outImage = displayPosition(inImage, curPosition);
    imshow(outImage); drawnow;
    
end
        